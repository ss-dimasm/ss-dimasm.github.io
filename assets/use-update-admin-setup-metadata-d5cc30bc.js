import{k as y,y as g,q as I,g as M,h as T,p as R,F as f,r as m,z,I as O}from"./app-fc3be005.js";import"./index-e8b020c1.js";import"./elements-7fcf5525.js";import{m as u,A as P,b as v}from"./use-get-admin-setup-metadata-44fda336.js";import{Q as _}from"./queries-keys-1e9a6485.js";import{A,U as w}from"./axios-7a17aed4.js";import{i as p}from"./index-f4612fa3.js";import{b as U}from"./hooks-05c80420.js";const B=async(r,a)=>{try{return await A.post(w.METADATA,r,{headers:{Authorization:`Bearer ${a.accessToken}`}})}catch(t){throw p(t)?y(t):new Error(t)}},b=async(r,a)=>{const{data:t}=await A.post(w.METADATA_SCHEMA,r,{headers:{Authorization:`Bearer ${a.accessToken}`}});return t},D=async r=>{var a;try{const t={entityType:u.name,schema:g(u.model)};return await b(t,r)}catch(t){if(p(t)){if(((a=t.response)==null?void 0:a.status)==400)return;throw y(t)}throw new Error(t)}},j=()=>{const r=I(),a=M(),{connectSession:t}=T(a),{isMetadataSchemaReady:e,setIsMetadataSchemaReady:E}=U();return R({mutationFn:async S=>{var s,c,d,h;try{if(!((s=t==null?void 0:t.loginIdentity)!=null&&s.groups.some(C=>P.includes(C))))throw new f({description:"User not recognized as Agency admin",errors:[]});if(!((c=t==null?void 0:t.loginIdentity)!=null&&c.officeId))throw new f({description:"User don't have officeId",errors:[]});const o={entityType:u.name,entityId:t.loginIdentity.officeId,metadata:{...v,...S}};e||(await D(t),E(!0));const{headers:n}=await B(o,t),i=(d=n==null?void 0:n.location)==null?void 0:d.split("/"),l=i==null?void 0:i[(i==null?void 0:i.length)-1],$={...o,id:l};r.setQueryData(_.ARW_ADMIN_SETUP_KEYS.byOffice((h=t==null?void 0:t.loginIdentity)==null?void 0:h.officeId),$)}catch(o){throw m(o)?o:new Error(o)}}})},k=async(r,a,t)=>{try{const{data:e}=await A.patch(`${w.METADATA}/${r}`,a,{headers:{Authorization:`Bearer ${t.accessToken}`}});return e}catch(e){throw p(e)?y(e):new Error(e)}},F=async(r,a,t)=>{try{const{data:e}=await A.put(`${w.METADATA_SCHEMA}/${r}`,a,{headers:{Authorization:`Bearer ${t.accessToken}`}});return e}catch(e){throw p(e)?y(e):new Error(e)}},x=async r=>{try{const a={schema:g(u.model)};return await F(u.name,a,r)}catch(a){throw m(a)?a:new Error(a)}},N=async(r,a,t)=>{try{const{data:e}=await A.put(`${w.METADATA}/${r}`,a,{headers:{Authorization:`Bearer ${t.accessToken}`}});return e}catch(e){throw p(e)?y(e):new Error(e)}},V=r=>{const a=M(),{connectSession:t}=T(a),{isMetadataSchemaReady:e,setIsMetadataSchemaReady:E}=U(),S=I();return R({mutationFn:async s=>{var c,d,h;try{if(!((c=t==null?void 0:t.loginIdentity)!=null&&c.groups.some(n=>P.includes(n))))throw new f({description:"User not recognized as Agency admin",errors:[]});if(!((d=t==null?void 0:t.loginIdentity)!=null&&d.officeId))throw new f({description:"User don't have officeId",errors:[]});const o=z(s);e||(await D(t),E(!0));try{await k(r,o,t)}catch(n){if(m(n)&&n instanceof O&&n.description.includes("An invalid json patch operation has been requested")){x(t);const i=S.getQueryData(_.ARW_ADMIN_SETUP_KEYS.byOffice((h=t==null?void 0:t.loginIdentity)==null?void 0:h.officeId)),l={metadata:{...i==null?void 0:i.metadata,...s}};await N(r,l,t)}else throw n}}catch(o){throw m(o)?o:new Error(o)}}})};export{V as a,j as u};
